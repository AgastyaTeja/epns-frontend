{"version":3,"sources":["pages/Home.js","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Container","styled","div","Preview","QnAItems","QnAItem","Question","Answer","Footer","FooterTitle","h1","FooterInner","FooterSub","FooterSubTitle","FooterSubLinks","FooterLink","a","props","bg","Home","setBadgeCount","bellPressed","ReactGA","pageview","React","useState","particleConfig","setParticleConfig","useEffect","config","num","rps","radius","life","v","tha","alpha","scale","position","color","cross","random","Math","Object","assign","onParticleUpdate","ctx","particle","beginPath","rect","p","x","y","fillStyle","fill","closePath","type","videoId","opts","playerVars","autoplay","size","href","target","button","height","width","tadaaa","keyframes","BellImage","img","ringme","css","BellImageAbs","Badge","span","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","onClick","src","className","animationIn","animationOut","durationOut","HeaderStyle","ProfileContainer","Logo","UserControls","Notice","Header","phase","dotenv","App","setBellPressed","initialize","HeaderContainer","ParentContainer","HomeContainer","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","border","ToastContainer","attrs","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.689ac3fb.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport YouTube from 'react-youtube';\nimport ParticlesBg from \"particles-bg\";\n\nimport { GiTwitter } from 'react-icons/gi';\nimport { FaBolt, FaTwitter, FaTelegramPlane, FaMedium, FaGithub, FaGooglePlay } from 'react-icons/fa';\nimport { IoMdHeart, IoMdNotifications } from 'react-icons/io';\n\n// Create Header\nfunction Home({ setBadgeCount, bellPressed }) {\n  ReactGA.pageview('/home');\n\n  const [particleConfig, setParticleConfig] = React.useState({});\n\n  React.useEffect(() => {\n    let config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-40, 40],\n      alpha: [0.6, 0],\n      scale: [.1, 0.4],\n      position: \"all\",\n      color: [\"#e20880\", \"#35c5f3\", \"#674c9f\"],\n      cross: \"dead\",\n      // emitter: \"follow\",\n      random: 15\n    };\n\n    if (Math.random() > 0.85) {\n      config = Object.assign(config, {\n        onParticleUpdate: (ctx, particle) => {\n          ctx.beginPath();\n          ctx.rect(\n            particle.p.x,\n            particle.p.y,\n            particle.radius * 2,\n            particle.radius * 2\n          );\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          ctx.closePath();\n        }\n      });\n    }\n\n    setParticleConfig(config);\n  });\n\n  // Render\n  return (\n    <Container>\n      <ParticlesBg type=\"custom\" config={particleConfig} bg={true} />\n\n      <Preview>\n        <YouTube\n          videoId=\"kwwnlmUpRsk\"\n          opts={{\n            playerVars: {\n             // https://developers.google.com/youtube/player_parameters\n             autoplay: 0,\n            }\n          }}\n        />\n      </Preview>\n      <QnAItems>\n        <QnAItem>\n          <Question>What is Ethereum Push Notification Service (EPNS)</Question>\n          <Answer>EPNS is the missing piece of Web3 <FaBolt size={14} color=\"#FFD302\"/>! EPNS is a decentralized DeFi protocol for sending notifications. It allows any users to send notifications on Ethereum which is platform agnostic (ie: you get it on Mobile, Chrome or even favorite Wallets). Did we mention you also earn from them!? Cause why not ;)</Answer>\n        </QnAItem>\n      </QnAItems>\n\n      <Footer>\n        <FooterTitle>Preparing Website for Liftoff, Meanwhile...</FooterTitle>\n        <FooterInner>\n          <FooterSub>\n            <FooterSubTitle>Follow our story!  <IoMdHeart size={18} color=\"#C51104\"/></FooterSubTitle>\n            <FooterSubLinks>\n              <FooterLink bg=\"#e20880\" href=\"https://twitter.com/epnsproject\" target=\"_blank\"><FaTwitter size={20} color=\"#fff\"/></FooterLink>\n              <FooterLink bg=\"#674c9f\" href=\"https://t.me/epnsproject\" target=\"_blank\"><FaTelegramPlane size={20} color=\"#fff\"/></FooterLink>\n              <FooterLink bg=\"#35c5f3\" href=\"https://medium.com/@epnsproject\" target=\"_blank\"><FaMedium size={20} color=\"#fff\"/></FooterLink>\n            </FooterSubLinks>\n          </FooterSub>\n          <FooterSub>\n            <FooterSubTitle>Check out Repo / Early (Alpha) Access</FooterSubTitle>\n            <FooterSubLinks>\n              <FooterLink bg=\"#e20880\" href=\"https://github.com/ethereum-push-notification-system\" target=\"_blank\"><FaGithub size={20} color=\"#fff\"/></FooterLink>\n              <FooterLink bg=\"#674c9f\" href=\"https://play.google.com/store/apps/details?id=io.epns.epns\" target=\"_blank\"><FaGooglePlay size={20} color=\"#fff\"/></FooterLink>\n              <FooterLink bg=\"#35c5f3\" href=\"https://app.epns.io\" target=\"_blank\"><IoMdNotifications size={20} color=\"#fff\"/></FooterLink>\n            </FooterSubLinks>\n          </FooterSub>\n        </FooterInner>\n      </Footer>\n\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n  padding: 20px;\n`\n\nconst Preview = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n`\n\nconst QnAItems = styled.div`\n  display: block;\n  margin: 50px 20px 30px 20px;\n`\n\nconst QnAItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 20px;\n  border-left: 10px solid #e20880;\n  border-radius: 10px;\n  background: #fafafa;\n`\n\nconst Question = styled.div`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 16px;\n`\n\nconst Answer = styled.div`\n  display: block;\n  font-weight: 200;\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 40px 20px;\n`\n\nconst FooterTitle = styled.h1`\n  font-size: 12px;\n  -webkit-letter-spacing: 2px;\n  -moz-letter-spacing: 2px;\n  -ms-letter-spacing: 2px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  font-weight: 400;\n  border-radius: 80px;\n  background: #674c9f;\n  color: #fff;\n  padding: 10px 25px;\n  margin: 0px 0px 20px 0px;\n`\n\nconst FooterInner = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 20px 0px;\n  align-self: stretch;\n`\n\nconst FooterSub = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  border: 1px solid #ddd;\n  margin: 0px 20px;\n  border-radius: 10px;\n  overflow: hidden;\n`\n\nconst FooterSubTitle = styled.div`\n  padding: 8px 10px;\n  font-size: 14px;\n  font-weight: 200;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #fafafa;\n  border-bottom: 1px solid #ddd;\n`\n\nconst FooterSubLinks = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 10px;\n`\n\nconst FooterLink = styled.a`\n  margin: 10px;\n  padding: 8px;\n  border-radius: 4px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background: ${(props) => props.bg ? props.bg : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Home;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n\n  return (\n    <HeaderStyle>\n      <ProfileContainer>\n        <Logo src=\"epns.png\" />\n      </ProfileContainer>\n      <UserControls>\n        <Bell\n          badgeCount={badgeCount}\n          bellPressedCB={bellPressedCB}\n          width={40}\n          height={40}\n        />\n      </UserControls>\n    </HeaderStyle>\n  );\n}\n\n// CSS Styles\nconst HeaderStyle = styled.div`\n  height: 100%;\n  padding: 10px 15px;\n  background: transparent;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n`\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justfy-content: flex-start;\n`\n\nconst Logo = styled.img`\n  height: 45px;\n`\n\nconst UserControls = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ImageButton = styled.button`\n\n`\n\nconst NetworkDisplayer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport Loader from 'react-loader-spinner'\nimport styled from 'styled-components';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nexport default function() {\n  return (\n    <App />\n  )\n}\n\nfunction initializeGA() {\n  ReactGA.initialize('UA-165415629-2');\n  ReactGA.pageview('/homepage');\n}\n\nfunction App() {\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // Initialize GA\n  ReactGA.initialize('UA-165415629-1');\n  ReactGA.pageview('/login');\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n            />\n          </HomeContainer>\n        </ParentContainer>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.div`\n  height: 55px;\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 20px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 940px;\n`\n\nconst ProviderUpperContainer = styled.div`\n  display: flex;\n  flex: 1,\n  align-self: center;\n  flex-direction: column;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 20px;\n  min-width: 200px;\n`\n\nconst ProviderContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 200px;\n  background: #fff;\n  outline: 0;\n  max-width: 200px;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  height: 60px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {}\n  .Toastify__toast {}\n  .Toastify__toast--error {}\n  .Toastify__toast--warning {}\n  .Toastify__toast--success {}\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nReactDOM.render(\n\n    <App />,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}